
public class Test {

   //12946
   public static void main(String[] args){
	   
	//2:12,13,23
	//3:13,12.32.13.21.23.13	  
	solution(2);
	
   }   
   
   static int pos = 0;
   static int[][] answer;

   public static int[][] solution(int n) {
       //하오이 이동갯수 2^n - 1
	   int num = (int)Math.pow(2, n) - 1;  
       answer = new int[num][2];
       hanoi(n,1,2,3);
       
       return answer;
   }

   /* N: 원판의 개수
	 * from: 출발지 - A
	 * use: 출발지도 목적지도 아닌 곳 - B
	 * to: 목적지 - C
	 *  1. 기둥 A에서 N-1개의 원반을 기둥 C를 이용하여 기동 B로 옮긴다.
	 *  2. 기둥 A에서 1개의 원반을 기둥 C로 옮긴다.
	 *  3. 기둥 B에서 N-1개의 원반을 기둥 A를 이용해서 기둥 C로 옮긴다. 
	 */
   private static void hanoi(int n, int from, int use, int to){
	   
	   if(n==0) return;	   
	   
	   hanoi(n-1, from, to, use); // n-1개의 원판을 목적지가 아닌 곳(use)로 옮겨놓음.
	   
	   // 마지막 원판을 목적지로 옮김.
	   answer[pos][0] = from;
	   answer[pos][1] = to;
	   pos++;

	   hanoi(n-1, use, from, to);// 목적지가 아닌 곳(use)에 옮겨놓았던 원판들을 목적지로 옮김	
   }
   
}